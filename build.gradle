// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'io.fabric.tools:gradle:1.31.2'
        classpath 'com.squareup.sqldelight:gradle-plugin:1.3.0'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }

    ext {
        compileSdkProjectVersion = 29
        buildToolsProjectVersion = '29.0.2'
        minSdkProjectVersion = 26
        targetSdkProjectVersion = 29
        firebaseVersion = '17.4.3'
        retrofitVersion = '2.6.2'
        okHttpVersion = '3.14.1'
        coroutines = '1.3.3'
        sqldelight = '1.2.2'

        espressoVersion = '3.0.0'
        junitRunnerVersion = '1.0.0'
        junitVersion = '4.12'
        mockitoVersion = '1.10.19'
        hamcrestVersion = '1.3'
    }

    if (plugins.hasPlugin("org.jetbrains.kotlin.jvm")) {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    plugins.withId("com.android.library") {
        extensions.getByName("android").compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    plugins.withId("com.android.application") {
        extensions.getByName("android").compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "1.8"
        }

        allprojects {
            kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
        }
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}
